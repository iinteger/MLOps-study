* 도커 컨테이너 생성 
- docker build -t "생성할 컨테이너명" "도커파일을 실행할 위치(일반적으로 . 사용)"

* 생성된 컨테이너 실행
- docker run "생성된 컨테이너명"
  * 컨테이너 포트포워딩
  - docker run -p "사용자 측 포트번호":"컨테이너 측 포트번호" "생성된 컨테이너명"

* 파워쉘을 사용하여 포트포워딩할 때, 주소창에 localhost:"포트포워딩 포트번호" 형식으로 입력해야 웹사이트 접속 가능


* Docker compose 역할
1. docker 명령어를 코드로 관리할 수 있다.
2. 여러 컨테이너의 실행 순서를 지정할 수 있다.
3. 여러 컨테이너 간 공유하는 네트워크 및 볼륨을 관리할 수 있다.

* 도커 컴포즈 yaml 파일 작성
- version
1. 컴포즈 파일의 버전. 최신 기준 "3"

- services
1. Compose에 묶일 서비스들. 하나의 서비스는 하나의 컨테이너를 의미

- mlflow-server(4강 예시)
1. 사용할 서비스의 이름

- build
1. 빌드할 이미지들의 정보를 입력


* Docker compose 실행
1. docker compose 실행
-> docker compose up -d --build
- -d : detached 모드로 실행. 백그라운드에서 컨테이너를 실행 후 유지시키는 모드
-- build : 서비스에서 사용할 이미지를 빌드 후 실행

2. detach된 compose의 로그 확인
-> docker compose logs

3. docker compose 종료
-> docker compose down

* param과 metric에 동일한 이름의 변수가 이미 설정되어있다면 같은 run 안에서 재정의 불가

